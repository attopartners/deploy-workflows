name: Deploy
on:
  workflow_call:
    inputs:
      environment:
        default: 'production'
        type: string
      k8s_namespace:
        description: 'Kubernetes namespace'
        required: true
        type: string
      k8s_deployment:
        description: 'Kubernetes deployment name'
        required: true
        type: string
      helm_file:
        description: 'Helm file'
        required: true
        type: string
      helm_chart_version:
        description: 'Helm chart version'
        type: string
        default: '0.2.13'
    secrets:
      KUBE_CONFIG:
        required: true
      KUBE_CONTEXT:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
permissions:
  id-token: write
  contents: read 
  deployments: write
jobs:
  deploy:
    name: Deploy via Helm to Kubernetes
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3

    - name: Install helm
      uses: azure/setup-helm@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup kubectl
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        KUBE_CONTEXT: ${{ secrets.KUBE_CONTEXT }}
      run: |
        mkdir -p $HOME/.kube
        echo "$KUBE_CONFIG" | base64 -d > $HOME/.kube/config
        kubectl config use-context $KUBE_CONTEXT

    - name: Deploy via Helm
      run: |
        helm repo add attopartners https://attopartners.github.io/helmcharts/charts
        helm repo update  
        helm upgrade --install ${{ inputs.k8s_namespace }} attopartners/atto-app --version ${{ inputs.helm_chart_version }} --values $GITHUB_WORKSPACE/${{ inputs.helm_file }} -n ${{ inputs.k8s_namespace }} --set commit=${{ github.event.after }}

    - name: Wait for deployment to be ready
      run: |
        kubectl rollout status -w --timeout=300s deployment/${{ inputs.k8s_deployment }} -n ${{ inputs.k8s_namespace }}

    - name: Slack Notification on Failure
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        channel: '#deployment'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: ${{ always() }}